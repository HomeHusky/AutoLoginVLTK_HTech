# ===============================
# üìã CONFIGURATION & CONSTANTS
# ===============================
"""
File ch·ª©a t·∫•t c·∫£ c√°c constants v√† c·∫•u h√¨nh c·ªßa ·ª©ng d·ª•ng
D·ªÖ d√†ng thay ƒë·ªïi v√† qu·∫£n l√Ω t·∫≠p trung
"""

import os

# ================================================================
# üìÅ FILE PATHS
# ================================================================

# Version file
VERSION_FILE = "version.txt"

# JSON files
ACCOUNTS_FILE = 'accounts.json'
GLOBAL_TIME_FILE = 'global_time.json'
SERVERS_FILE = 'servers.json'
ACCOUNTS_MONEY_STATUS_FILE = 'accounts_money_status.json'
MONITOR_TIME_FILE = 'monitor_time.json'
GOM_ACCOUNTS_FILE = 'gom_accounts.json'
FIX_WEB_CTCX_FILE = 'fix_web_ctcx.json'
AUTO_UPDATE_FILE = 'autoUpdate_path.json'
FAIL_SERVERS_FILE = 'fail_servers.json'
PASS_MONITOR_FILE = 'pass_monitor.txt'

# ================================================================
# üåê URLS
# ================================================================

# GitHub URLs
GITHUB_VERSION_URL = "https://raw.githubusercontent.com/HomeHusky/AutoLoginVLTK_HTech/master/version.txt"
GITHUB_DOWNLOAD_URL = "https://github.com/HomeHusky/AutoLoginVLTK_HTech/archive/refs/heads/master.zip"

# ================================================================
# ‚öôÔ∏è DEFAULT SETTINGS
# ================================================================

# Default auto names
DEFAULT_AUTO_NAMES = ["vocongtruyenky", "congthanhchienxua", "AutoVLBS"]

# Default auto tool path
DEFAULT_AUTO_TOOL_PATH = "D:/VoLamTruyenKy/AutoVLBS19/TrainJX.exe"

# Default sleep times
DEFAULT_SLEEP_TIME = {
    "wait_time_open": 15,
    "wait_time_open2": 45,
    "wait_time_load": 2,
    "wait_time_server": 8,
    "wait_time_open_trainjx": 3,
    "wait_time_load_autovlbs": 5,
    "try_number": 3,
    "global_time_sleep": 1,
    "hide_effects": 1,
    "start_up": 1
}

# Default monitor settings
DEFAULT_MONITOR_TIME = "5"
DEFAULT_KPI = "48"  # KPI cho t√†i kho·∫£n th∆∞·ªùng (Kv/day) - 1 gi·ªù tƒÉng 2 Kv
DEFAULT_KPI_GOM = "96"  # KPI cho t√†i kho·∫£n gom ti·ªÅn (Kv/day) - 1 gi·ªù tƒÉng 4 Kv (g·∫•p ƒë√¥i)
DEFAULT_TOTAL_SERVERS = "10"
DEFAULT_TITLE_MAIL = "M√°y ch·ªß AutoVLBS"

# ================================================================
# üé® UI SETTINGS
# ================================================================

# Window settings
WINDOW_TITLE_PREFIX = "Auto Login Htechnology"
WINDOW_GEOMETRY = "1000x750+50+50"
WINDOW_RESIZABLE = (True, True)

# Simple Color Palette - Like Original autoLogin.py
COLOR_PRIMARY = "#5783db"      # Simple blue
COLOR_PRIMARY_HOVER = "#4681f4"  # Lighter blue on hover
COLOR_SUCCESS = "#5783db"      # Same as primary (simple)
COLOR_SUCCESS_HOVER = "#4681f4"  # Same as primary hover
COLOR_DANGER = "#5783db"       # Same as primary (simple)
COLOR_DANGER_HOVER = "#4681f4"   # Same as primary hover
COLOR_WARNING = "#5783db"      # Same as primary (simple)
COLOR_INFO = "#5783db"         # Same as primary (simple)
COLOR_BACKGROUND = "#f0f0f0"   # Light gray background
COLOR_SURFACE = "#ffffff"      # White
COLOR_TEXT = "#000000"         # Black text
COLOR_TEXT_SECONDARY = "#666666"  # Gray text
COLOR_BORDER = "#cccccc"       # Gray border

# Style settings
THEME = 'clam'
BUTTON_PADDING = 8
BUTTON_BACKGROUND = COLOR_PRIMARY
BUTTON_FOREGROUND = "white"
BUTTON_ACTIVE_BACKGROUND = COLOR_PRIMARY_HOVER

LABEL_PADDING = 6
LABEL_FONT = ('Segoe UI', 10)
LABEL_FONT_BOLD = ('Segoe UI', 10, 'bold')

TREEVIEW_HEADING_FONT = ('Segoe UI', 10, 'bold')
TREEVIEW_ROW_HEIGHT = 28

# Tab settings
TAB_PADDING = 15

# ================================================================
# üîß SYSTEM SETTINGS
# ================================================================

# PyAutoGUI settings
PYAUTOGUI_FAILSAFE = False

# Boot time threshold (minutes)
BOOT_TIME_THRESHOLD = 2

# Startup delay (milliseconds)
STARTUP_DELAY = 4000

# ================================================================
# üîê SECURITY SETTINGS
# ================================================================

# Special password for monitoring
SPECIAL_MONITOR_PASSWORD = '0919562182qQ!'

# ================================================================
# üìä TREEVIEW COLUMNS
# ================================================================

# Account treeview columns
ACCOUNT_COLUMNS = {
    "stt": {"text": "Stt", "width": 30},
    "is_select": {"text": "B·ªè qua", "width": 50},
    "username": {"text": "Username", "width": 100},
    "ingame": {"text": "Ingame", "width": 100},
    "game_path": {"text": "PathGame", "width": 200},
    "is_logged_in": {"text": "Tr·∫°ng th√°i", "width": 60},
    "is_gom_tien": {"text": "Tk gom ti·ªÅn", "width": 40},
    "is_xe_2": {"text": "Xe 2", "width": 40},
    "so_lan_xuong": {"text": "S·ªë l·∫ßn xu·ªëng cum server", "width": 40},
    "so_lan_xuong2": {"text": "S·ªë l·∫ßn xu·ªëng server", "width": 40}
}

# Money treeview columns
MONEY_COLUMNS = {
    "stt": {"text": "Stt", "width": 50},
    "ingame": {"text": "T√™n nv", "width": 100},
    "tong_tien": {"text": "T·ªïng ti·ªÅn", "width": 100},
    "thu_nhap": {"text": "Thu nh·∫≠p", "width": 80},
    "thoi_gian": {"text": "Th·ªùi gian", "width": 80},
    "TDP/C": {"text": "TDP/C", "width": 80},
    "ban_do": {"text": "B·∫£n ƒë·ªì", "width": 80},
    "server": {"text": "Server", "width": 80}
}

# ================================================================
# üìù MESSAGES
# ================================================================

MESSAGES = {
    "update_available": "C√≥ b·∫£n c·∫≠p nh·∫≠t m·ªõi, b·∫°n c√≥ mu·ªën c·∫≠p nh·∫≠t?",
    "update_latest": "B·∫°n ƒëang s·ª≠ d·ª•ng phi√™n b·∫£n m·ªõi nh·∫•t.",
    "update_success": "·ª®ng d·ª•ng ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng. B·∫Øt ƒë·∫ßu kh·ªüi ƒë·ªông l·∫°i.",
    "update_failed": "Qu√° tr√¨nh c·∫≠p nh·∫≠t th·∫•t b·∫°i: {}",
    
    "login_confirm": "Vui l√≤ng chuy·ªÉn sang ti·∫øng Anh v√† t·∫Øt CAPS LOCK tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu. B·∫°n ƒë√£ th·ª±c hi·ªán ch∆∞a?",
    "login_reminder": "Vui l√≤ng th·ª±c hi·ªán y√™u c·∫ßu tr∆∞·ªõc khi ti·∫øp t·ª•c.",
    "login_error": "Kh√¥ng th·ªÉ b·∫Øt ƒë·∫ßu qu√° tr√¨nh ƒëƒÉng nh·∫≠p: {}",
    "login_stopped": "D·ª´ng ƒëƒÉng nh·∫≠p th√†nh c√¥ng.",
    "login_stop_error": "Kh√¥ng th·ªÉ d·ª´ng qu√° tr√¨nh ƒëƒÉng nh·∫≠p: {}",
    
    "account_exists": "T√†i kho·∫£n ƒë√£ c√≥ trong d·ªØ li·ªáu!",
    "account_deleted": "ƒê√£ xo√° t√†i kho·∫£n!",
    "account_delete_confirm": "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën xo√° t√†i kho·∫£n n√†y?",
    "account_select_to_delete": "Vui l√≤ng ch·ªçn t√†i kho·∫£n ƒë·ªÉ x√≥a!",
    "account_select_editing": "Vui l√≤ng ch·ªçn t√†i kho·∫£n ƒëang ch·ªânh s·ª≠a!",
    "account_missing_info": "Vui l√≤ng nh·∫≠p ƒë·ªß th√¥ng tin!",
    
    "auto_update_confirm": "Thao t√°c n√†y s·∫Ω ch·∫°y t·∫•t c·∫£ AutoUpdate c·ªßa c√°c server m√† d·ªØ li·ªáu ƒëang c√≥!",
    "auto_update_stopped": "D·ª´ng AutoUpdate th√†nh c√¥ng!",
    "auto_update_success": "Ch·∫°y AutoUpdate th√†nh c√¥ng!",
    
    "monitor_confirm": "Thao t√°c n√†y s·∫Ω ch·∫°y theo d√µi t√†i kho·∫£n c·ªßa c√°c server m√† d·ªØ li·ªáu ƒëang c√≥!",
    "monitor_stopped": "D·ª´ng theo d√µi th√†nh c√¥ng.",
    
    "save_success": "ƒê√£ l∆∞u th√†nh c√¥ng d·ªØ li·ªáu Auto Tool!",
    "refresh_success": "L√†m m·ªõi th√†nh c√¥ng.",
    "test_success": "Ki·ªÉm tra th√†nh c√¥ng.",
    
    "error_generic": "C√≥ l·ªói x·∫£y ra: {}",
    "file_not_found": "File {} kh√¥ng t·ªìn t·∫°i.",
    "path_missing": "Vui l√≤ng nh·∫≠p ƒë∆∞·ªùng d·∫´n tool auto!",
    "server_updated": "ƒê√£ c·∫≠p nh·∫≠t servers.json th√†nh c√¥ng!"
}

# ================================================================
# üéØ HELPER FUNCTIONS
# ================================================================

def get_message(key, *args):
    """
    L·∫•y message t·ª´ dictionary v√† format n·∫øu c·∫ßn
    
    Args:
        key: Key c·ªßa message
        *args: Arguments ƒë·ªÉ format message
    
    Returns:
        str: Message ƒë√£ ƒë∆∞·ª£c format
    """
    message = MESSAGES.get(key, "")
    if args:
        return message.format(*args)
    return message

def get_column_config(column_type):
    """
    L·∫•y c·∫•u h√¨nh c·ªôt cho treeview
    
    Args:
        column_type: 'account' ho·∫∑c 'money'
    
    Returns:
        dict: Dictionary ch·ª©a c·∫•u h√¨nh c·ªôt
    """
    if column_type == 'account':
        return ACCOUNT_COLUMNS
    elif column_type == 'money':
        return MONEY_COLUMNS
    return {}
